{"version":3,"sources":["assets/datasets/Places of Interest and Attractions.geojson","assets/datasets/School locations-all types data.geojson","assets/datasets/Assault_xaaaa.geojson","assets/datasets/Auto Theft_xaaaa.geojson","assets/datasets/Break and Enter_xaaaa.geojson","assets/datasets/Robbery_xaaaa.geojson","assets/datasets/Theft Over_xaaaa.geojson","components/MapOne/MapOne.js"],"names":["module","exports","fullscreenControlStyle","position","top","left","padding","navStyle","scaleControlStyle","bottom","MapOne","useState","latitude","longitude","zoom","width","height","viewport","setViewport","searchResultLayer","setSearchResultLayer","hoveredObject","pointerX","pointerY","test","setTest","crimeData","setCrimeData","school","setSchool","checkedSchool","setCheckedSchool","checkedAssault","setCheckedAssault","checkedAuto","setCheckedAuto","checkedBE","setCheckedBE","checkedRobbery","setCheckedRobbery","checkedTheft","setCheckedTheft","checkedPlaces","setCheckedPlaces","checkNeigh","setCheckNeigh","neigh","setNeigh","polyData","setPolyData","crimeLayerOne","GeoJsonLayer","id","data","Assault","pickable","getFillColor","getRadius","pointRadiusMinPixels","pointRadiusMaxPixels","onHover","info","object","x","y","crimeLayerTwo","Auto","crimeLayerThree","BE","crimeLayerFour","Robbery","schoolLayer","schoolData","crimeLayerFive","Theft","placesLayer","placesData","axios","get","then","response","features","catch","err","console","log","polyLayer","PolygonLayer","stroked","filled","wireframe","visible","lineWidthMinPixels","getPolygon","d","geometry","rings","attributes","Population","getLineColor","getLineWidth","layers","push","className","onSelected","item","message","place_name","hideOnSelect","queryParams","country","mapboxApiAccessToken","process","updateInputOnSelect","pointZoom","transitionDuration","onViewportChange","mapStyle","dragPan","touchAction","getCursor","style","zIndex","pointerEvents","backgroundColor","color","borderRadius","properties","MCI","Neighbourhood","occurrencedate","NAME","ADDRESS_FULL","POSTAL_CODE","Assault_2019","BreakandEnter_2019","AutoTheft_2019","Homicide_2019","Robbery_2019","TheftOver_2019","onChange","checked","handleDiameter","uncheckedIcon","checkedIcon","paddingLeft"],"mappings":"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","file":"static/js/4.efa27ea6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Places of Interest and Attractions.faae3d81.geojson\";","module.exports = __webpack_public_path__ + \"static/media/School locations-all types data.8ea8cf0b.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Assault_xaaaa.e0b7e688.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Auto Theft_xaaaa.ad1ec65a.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Break and Enter_xaaaa.248fe349.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Robbery_xaaaa.a937294a.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Theft Over_xaaaa.e0d9b6f2.geojson\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactMapGL, {\n  NavigationControl,\n  FullscreenControl,\n  ScaleControl,\n} from \"react-map-gl\";\nimport * as placesData from \"../../assets/datasets/Places of Interest and Attractions.geojson\";\nimport \"./mapone.scss\";\nimport * as schoolData from \"../../assets/datasets/School locations-all types data.geojson\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport DeckGL, {\n  GeoJsonLayer,\n  // HexagonLayer,\n  // ScatterplotLayer,\n  PolygonLayer,\n} from \"deck.gl\";\nimport Assault from \"../../assets/datasets/Assault_xaaaa.geojson\";\nimport Auto from \"../../assets/datasets/Auto Theft_xaaaa.geojson\";\nimport BE from \"../../assets/datasets/Break and Enter_xaaaa.geojson\";\nimport Robbery from \"../../assets/datasets/Robbery_xaaaa.geojson\";\nimport Theft from \"../../assets/datasets/Theft Over_xaaaa.geojson\";\nimport Switch from \"react-switch\";\n// const address = encodeURIComponent(\"2866 battleford road\");\n// const lat = \"43.7652846\";\n// const lon = \"-79.1629172\";\nconst fullscreenControlStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"10px\",\n};\n\nconst navStyle = {\n  position: \"absolute\",\n  top: 36,\n  left: 0,\n  padding: \"10px\",\n};\n\nconst scaleControlStyle = {\n  position: \"absolute\",\n  bottom: 36,\n  left: 0,\n  padding: \"10px\",\n};\n\nfunction MapOne() {\n  //10.34/43.7135/-79.2916\n  const [viewport, setViewport] = useState({\n    latitude: 43.7135,\n    longitude: -79.2916,\n    zoom: 10.34,\n    width: \"80%\",\n    height: \"500px\",\n  });\n  const [searchResultLayer, setSearchResultLayer] = useState(null);\n  const [test, setTest] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [crimeData, setCrimeData] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [school, setSchool] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n\n  const [checkedSchool, setCheckedSchool] = useState(false);\n  const [checkedAssault, setCheckedAssault] = useState(false);\n  const [checkedAuto, setCheckedAuto] = useState(false);\n  const [checkedBE, setCheckedBE] = useState(false);\n  const [checkedRobbery, setCheckedRobbery] = useState(false);\n  const [checkedTheft, setCheckedTheft] = useState(false);\n  const [checkedPlaces, setCheckedPlaces] = useState(false);\n  const [checkNeigh, setCheckNeigh] = useState(false);\n  const [neigh, setNeigh] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [polyData, setPolyData] = useState(\"\");\n  // zoom stop rendering and limit zoom and then heatmap/hexagonallayer\n  // legend that starts with 2019 stats by default\n  // webgl force enable -??\n  // useEffect(() => {\n  //   const listener = e => {\n  //     if (e.key === \"Escape\") {\n  //       setSelectedPlace(null);\n  //     }\n  //   };\n  //   window.addEventListener(\"keydown\", listener);\n\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  const renderTooltip = () => {\n    return (\n      test.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: test.pointerX,\n            top: test.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {test.hoveredObject.message}\n        </div>\n      )\n    );\n  };\n\n  const renderTooltipCrime = () => {\n    return (\n      crimeData.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: crimeData.pointerX,\n            top: crimeData.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {crimeData.hoveredObject.properties.MCI} <br />\n          {crimeData.hoveredObject.properties.Neighbourhood} <br />\n          {crimeData.hoveredObject.properties.occurrencedate}\n        </div>\n      )\n    );\n  };\n\n  const renderTooltipSchool = () => {\n    return (\n      school.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: school.pointerX,\n            top: school.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {school.hoveredObject.properties.NAME} <br />\n          {school.hoveredObject.properties.ADDRESS_FULL} <br />\n          {school.hoveredObject.properties.POSTAL_CODE}\n        </div>\n      )\n    );\n  };\n  let onSelected = (viewport, item) => {\n    setViewport(viewport);\n    setSearchResultLayer(\n      new GeoJsonLayer({\n        id: \"search-result\",\n        data: [{ geometry: item.geometry, message: item.place_name }],\n        pickable: true,\n        getFillColor: [20, 75, 195, 255],\n        getRadius: 25,\n        pointRadiusMinPixels: 5,\n        pointRadiusMaxPixels: 5,\n        onHover: (info) => {\n          setTest({\n            hoveredObject: info.object,\n            pointerX: info.x,\n            pointerY: info.y,\n          });\n        },\n      })\n    );\n  };\n\n  const crimeLayerOne = new GeoJsonLayer({\n    id: \"Assault-data\",\n    data: Assault,\n    pickable: true,\n    getFillColor: [165, 12, 12, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerTwo = new GeoJsonLayer({\n    id: \"Auto-data\",\n    data: Auto,\n    pickable: true,\n    getFillColor: [250, 101, 7, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerThree = new GeoJsonLayer({\n    id: \"BE-data\",\n    data: BE,\n    pickable: true,\n    getFillColor: [168, 48, 40, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerFour = new GeoJsonLayer({\n    id: \"Robbery-data\",\n    data: Robbery,\n    pickable: true,\n    getFillColor: [218, 1, 109, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const schoolLayer = new GeoJsonLayer({\n    id: \"School-data\",\n    data: schoolData,\n    pickable: true,\n    getFillColor: [226, 240, 54, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setSchool({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerFive = new GeoJsonLayer({\n    id: \"Theft-data\",\n    data: Theft,\n    pickable: true,\n    getFillColor: [148, 46, 60, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n  const placesLayer = new GeoJsonLayer({\n    id: \"Places of Interest\",\n    data: placesData,\n    pickable: true,\n    getFillColor: [69, 74, 222, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setSchool({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const renderTooltipNeigh = () => {\n    return (\n      neigh.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: neigh.pointerX,\n            top: neigh.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {\"Population: \" + neigh.hoveredObject.attributes.Population} <br />\n          {\"NeighbourHood: \" +\n            neigh.hoveredObject.attributes.Neighbourhood}{\" \"}\n          <br />\n          {\"Assaults 2019: \" + neigh.hoveredObject.attributes.Assault_2019}{\" \"}\n          <br />\n          {\"BreakandEnter 2019: \" +\n            neigh.hoveredObject.attributes.BreakandEnter_2019}{\" \"}\n          <br />\n          {\"Auto Thefts 2019: \" +\n            neigh.hoveredObject.attributes.AutoTheft_2019}{\" \"}\n          <br />\n          {\"Homicides 2019: \" +\n            neigh.hoveredObject.attributes.Homicide_2019}{\" \"}\n          <br />\n          {\"Robberies 2019: \" +\n            neigh.hoveredObject.attributes.Robbery_2019}{\" \"}\n          <br />\n          {\"TheftOver 2019: \" +\n            neigh.hoveredObject.attributes.TheftOver_2019}{\" \"}\n          <br />\n        </div>\n      )\n    );\n  };\n\n  // api.walkscore.com/score?format=json&address=${address}&lat=${lat}&lon=${lon}&wsapikey=${API_KEY}`\n  // componentDidMount() {\n  //   axios.get(`http://localhost:8080/walk/score?format=json&address=${address}&lat=${lat}&lon=${lon}&wsapikey=${process.env.REACT_APP_WALK_API_KEY}`).then(res=>console.log(res)).catch(err=>console.log(err));\n\n  // axios\n  //   .get(\n  //     \"https://services.arcgis.com/S9th0jAJ7bqgIRjw/arcgis/rest/services/MCI_2014_to_2019/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\n  //   )\n  //   .then(res => console.log(res.data))\n  //   .catch(err => console.log(err));\n  // console.log(placesData.default.features);\n  // console.log(schoolData);\n  // console.log(test);\n  // }\n  const getData = () => {\n    axios\n      .get(\n        \"https://services.arcgis.com/S9th0jAJ7bqgIRjw/arcgis/rest/services/Neighbourhood_MCI/FeatureServer/0/query?where=1%3D1&outFields=Neighbourhood,Population,Assault_2019,AutoTheft_2019,BreakandEnter_2019,Homicide_2019,Robbery_2019,TheftOver_2019&outSR=4326&f=json\"\n      )\n      .then((response) => {\n        setPolyData(response.data.features);\n      })\n      .catch((err) => console.log(err));\n  };\n  if (!polyData) {\n    getData();\n  }\n  let polyLayer = new PolygonLayer({\n    id: \"polygon-layer\",\n    data: polyData,\n    pickable: true,\n    stroked: true,\n    filled: true,\n    wireframe: true,\n    visible: true,\n    lineWidthMinPixels: 1,\n    getPolygon: (d) => d.geometry.rings,\n    getFillColor: (d) => [d.attributes.Population / 60, 140, 0],\n    getLineColor: [80, 80, 80],\n    getLineWidth: 1,\n    onHover: (info) => {\n      setNeigh({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const queryParams = {\n    country: \"ca\",\n  };\n  const layers = [searchResultLayer];\n  if (checkedSchool) {\n    layers.push(schoolLayer);\n  }\n  if (checkedAssault) {\n    layers.push(crimeLayerOne);\n  }\n  if (checkedAuto) {\n    layers.push(crimeLayerTwo);\n  }\n  if (checkedBE) {\n    layers.push(crimeLayerThree);\n  }\n  if (checkedRobbery) {\n    layers.push(crimeLayerFour);\n  }\n  if (checkedTheft) {\n    layers.push(crimeLayerFive);\n  }\n  if (checkedPlaces) {\n    layers.push(placesLayer);\n  }\n  if (checkNeigh && polyData) {\n    layers.push(polyLayer);\n  }\n\n  // console.log(polyData);\n  return (\n    <>\n      <div className=\"maps__text\">\n        The Following Map lets you search for any area and shows previous\n        crimes, places of interest and schools in the area. To see crimes,\n        please search a neighbourhood within Toronto\n      </div>\n      <section className=\"maps__data\">\n        <Geocoder\n          onSelected={onSelected}\n          viewport={viewport}\n          hideOnSelect={true}\n          queryParams={queryParams}\n          className=\"maps__search\"\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          updateInputOnSelect={true}\n          pointZoom={14}\n          transitionDuration={200}\n        />\n        <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          onViewportChange={setViewport}\n          mapStyle=\"mapbox://styles/darkthunder119/ck7uiltqn5ugg1iqhscr6epoe\"\n          className=\"maps__map\"\n          dragPan={true}\n          touchAction=\"pan-y\"\n        >\n          {searchResultLayer && (\n            <DeckGL {...viewport} layers={layers} getCursor={() => \"crosshair\"}>\n              {renderTooltip}\n              {renderTooltipCrime}\n              {renderTooltipSchool}\n              {renderTooltipNeigh}\n            </DeckGL>\n          )}\n          <div style={fullscreenControlStyle}>\n            <FullscreenControl />\n          </div>\n          <div style={navStyle}>\n            <NavigationControl />\n          </div>\n          <div style={scaleControlStyle}>\n            <ScaleControl />\n          </div>\n          {searchResultLayer && (\n            <div className=\"maps__mainlegend\">\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedSchool(!checkedSchool)}\n                  checked={checkedSchool}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> School Data</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedAssault(!checkedAssault)}\n                  checked={checkedAssault}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Assaults 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedAuto(!checkedAuto)}\n                  checked={checkedAuto}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Auto Theft 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedRobbery(!checkedRobbery)}\n                  checked={checkedRobbery}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Robberies 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedBE(!checkedBE)}\n                  checked={checkedBE}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}>Break and Enters 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedTheft(!checkedTheft)}\n                  checked={checkedTheft}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Thefts 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedPlaces(!checkedPlaces)}\n                  checked={checkedPlaces}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Places of Interest</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckNeigh(!checkNeigh)}\n                  checked={checkNeigh}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Neighbourhood Boundaries</p>\n              </div>\n            </div>\n          )}\n        </ReactMapGL>\n      </section>\n    </>\n  );\n}\n\nexport default MapOne;\n"],"sourceRoot":""}