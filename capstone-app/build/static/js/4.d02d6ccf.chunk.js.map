{"version":3,"sources":["assets/datasets/Places of Interest and Attractions.geojson","assets/datasets/School locations-all types data.geojson","assets/datasets/Assault_xaaaa.geojson","assets/datasets/Auto Theft_xaaaa.geojson","assets/datasets/Break and Enter_xaaaa.geojson","assets/datasets/Robbery_xaaaa.geojson","assets/datasets/Theft Over_xaaaa.geojson","components/MapOne/MapOne.js"],"names":["module","exports","fullscreenControlStyle","position","top","left","padding","navStyle","scaleControlStyle","bottom","MapOne","_useState","useState","latitude","longitude","zoom","width","height","_useState2","_slicedToArray","viewport","setViewport","_useState3","_useState4","searchResultLayer","setSearchResultLayer","_useState5","hoveredObject","pointerX","pointerY","_useState6","test","setTest","_useState7","_useState8","crimeData","setCrimeData","_useState9","_useState10","school","setSchool","_useState11","_useState12","checkedSchool","setCheckedSchool","_useState13","_useState14","checkedAssault","setCheckedAssault","_useState15","_useState16","checkedAuto","setCheckedAuto","_useState17","_useState18","checkedBE","setCheckedBE","_useState19","_useState20","checkedRobbery","setCheckedRobbery","_useState21","_useState22","checkedTheft","setCheckedTheft","_useState23","_useState24","checkedPlaces","setCheckedPlaces","_useState25","_useState26","checkNeigh","setCheckNeigh","_useState27","_useState28","neigh","setNeigh","_useState29","_useState30","polyData","setPolyData","renderTooltip","React","createElement","style","zIndex","pointerEvents","backgroundColor","color","borderRadius","message","renderTooltipCrime","properties","MCI","Neighbourhood","occurrencedate","renderTooltipSchool","NAME","ADDRESS_FULL","POSTAL_CODE","crimeLayerOne","GeoJsonLayer","id","data","Assault","pickable","getFillColor","getRadius","pointRadiusMinPixels","pointRadiusMaxPixels","onHover","info","object","x","y","crimeLayerTwo","Auto","crimeLayerThree","BE","crimeLayerFour","Robbery","schoolLayer","schoolData","crimeLayerFive","Theft","placesLayer","placesData","renderTooltipNeigh","attributes","Population","Assault_2019","BreakandEnter_2019","AutoTheft_2019","Homicide_2019","Robbery_2019","TheftOver_2019","axios","get","then","response","features","catch","err","console","log","polyLayer","PolygonLayer","stroked","filled","wireframe","visible","lineWidthMinPixels","getPolygon","d","geometry","rings","getLineColor","getLineWidth","layers","push","Fragment","className","Geocoder","onSelected","item","place_name","hideOnSelect","queryParams","country","mapboxApiAccessToken","process","updateInputOnSelect","pointZoom","transitionDuration","ReactMapGL","Object","assign","onViewportChange","mapStyle","dragPan","touchAction","DeckGL","getCursor","FullscreenControl","NavigationControl","ScaleControl","Switch","onChange","checked","handleDiameter","uncheckedIcon","checkedIcon","paddingLeft"],"mappings":"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","file":"static/js/4.d02d6ccf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Places of Interest and Attractions.faae3d81.geojson\";","module.exports = __webpack_public_path__ + \"static/media/School locations-all types data.8ea8cf0b.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Assault_xaaaa.e0b7e688.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Auto Theft_xaaaa.ad1ec65a.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Break and Enter_xaaaa.248fe349.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Robbery_xaaaa.a937294a.geojson\";","module.exports = __webpack_public_path__ + \"static/media/Theft Over_xaaaa.e0d9b6f2.geojson\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactMapGL, {\n  NavigationControl,\n  FullscreenControl,\n  ScaleControl,\n} from \"react-map-gl\";\nimport * as placesData from \"../../assets/datasets/Places of Interest and Attractions.geojson\";\nimport \"./mapone.scss\";\nimport * as schoolData from \"../../assets/datasets/School locations-all types data.geojson\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport DeckGL, {\n  GeoJsonLayer,\n  // HexagonLayer,\n  // ScatterplotLayer,\n  PolygonLayer,\n} from \"deck.gl\";\nimport Assault from \"../../assets/datasets/Assault_xaaaa.geojson\";\nimport Auto from \"../../assets/datasets/Auto Theft_xaaaa.geojson\";\nimport BE from \"../../assets/datasets/Break and Enter_xaaaa.geojson\";\nimport Robbery from \"../../assets/datasets/Robbery_xaaaa.geojson\";\nimport Theft from \"../../assets/datasets/Theft Over_xaaaa.geojson\";\nimport Switch from \"react-switch\";\n// const address = encodeURIComponent(\"2866 battleford road\");\n// const lat = \"43.7652846\";\n// const lon = \"-79.1629172\";\nconst fullscreenControlStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"10px\",\n};\n\nconst navStyle = {\n  position: \"absolute\",\n  top: 36,\n  left: 0,\n  padding: \"10px\",\n};\n\nconst scaleControlStyle = {\n  position: \"absolute\",\n  bottom: 36,\n  left: 0,\n  padding: \"10px\",\n};\n\nfunction MapOne() {\n  //10.34/43.7135/-79.2916\n  const [viewport, setViewport] = useState({\n    latitude: 43.7135,\n    longitude: -79.2916,\n    zoom: 10.34,\n    width: \"80%\",\n    height: \"500px\",\n  });\n  const [searchResultLayer, setSearchResultLayer] = useState(null);\n  const [test, setTest] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [crimeData, setCrimeData] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [school, setSchool] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n\n  const [checkedSchool, setCheckedSchool] = useState(false);\n  const [checkedAssault, setCheckedAssault] = useState(false);\n  const [checkedAuto, setCheckedAuto] = useState(false);\n  const [checkedBE, setCheckedBE] = useState(false);\n  const [checkedRobbery, setCheckedRobbery] = useState(false);\n  const [checkedTheft, setCheckedTheft] = useState(false);\n  const [checkedPlaces, setCheckedPlaces] = useState(false);\n  const [checkNeigh, setCheckNeigh] = useState(false);\n  const [neigh, setNeigh] = useState({\n    hoveredObject: \"\",\n    pointerX: \"\",\n    pointerY: \"\",\n  });\n  const [polyData, setPolyData] = useState(\"\");\n  // zoom stop rendering and limit zoom and then heatmap/hexagonallayer\n  // legend that starts with 2019 stats by default\n  // webgl force enable -??\n  // useEffect(() => {\n  //   const listener = e => {\n  //     if (e.key === \"Escape\") {\n  //       setSelectedPlace(null);\n  //     }\n  //   };\n  //   window.addEventListener(\"keydown\", listener);\n\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  const renderTooltip = () => {\n    return (\n      test.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: test.pointerX,\n            top: test.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {test.hoveredObject.message}\n        </div>\n      )\n    );\n  };\n\n  const renderTooltipCrime = () => {\n    return (\n      crimeData.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: crimeData.pointerX,\n            top: crimeData.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {crimeData.hoveredObject.properties.MCI} <br />\n          {crimeData.hoveredObject.properties.Neighbourhood} <br />\n          {crimeData.hoveredObject.properties.occurrencedate}\n        </div>\n      )\n    );\n  };\n\n  const renderTooltipSchool = () => {\n    return (\n      school.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: school.pointerX,\n            top: school.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {school.hoveredObject.properties.NAME} <br />\n          {school.hoveredObject.properties.ADDRESS_FULL} <br />\n          {school.hoveredObject.properties.POSTAL_CODE}\n        </div>\n      )\n    );\n  };\n  let onSelected = (viewport, item) => {\n    setViewport(viewport);\n    setSearchResultLayer(\n      new GeoJsonLayer({\n        id: \"search-result\",\n        data: [{ geometry: item.geometry, message: item.place_name }],\n        pickable: true,\n        getFillColor: [20, 75, 195, 255],\n        getRadius: 25,\n        pointRadiusMinPixels: 5,\n        pointRadiusMaxPixels: 5,\n        onHover: (info) => {\n          setTest({\n            hoveredObject: info.object,\n            pointerX: info.x,\n            pointerY: info.y,\n          });\n        },\n      })\n    );\n  };\n\n  const crimeLayerOne = new GeoJsonLayer({\n    id: \"Assault-data\",\n    data: Assault,\n    pickable: true,\n    getFillColor: [165, 12, 12, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerTwo = new GeoJsonLayer({\n    id: \"Auto-data\",\n    data: Auto,\n    pickable: true,\n    getFillColor: [250, 101, 7, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerThree = new GeoJsonLayer({\n    id: \"BE-data\",\n    data: BE,\n    pickable: true,\n    getFillColor: [168, 48, 40, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerFour = new GeoJsonLayer({\n    id: \"Robbery-data\",\n    data: Robbery,\n    pickable: true,\n    getFillColor: [218, 1, 109, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const schoolLayer = new GeoJsonLayer({\n    id: \"School-data\",\n    data: schoolData,\n    pickable: true,\n    getFillColor: [226, 240, 54, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setSchool({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const crimeLayerFive = new GeoJsonLayer({\n    id: \"Theft-data\",\n    data: Theft,\n    pickable: true,\n    getFillColor: [148, 46, 60, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setCrimeData({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n  const placesLayer = new GeoJsonLayer({\n    id: \"Places of Interest\",\n    data: placesData,\n    pickable: true,\n    getFillColor: [69, 74, 222, 255],\n    getRadius: 25,\n    pointRadiusMinPixels: 5,\n    pointRadiusMaxPixels: 5,\n    onHover: (info) => {\n      setSchool({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const renderTooltipNeigh = () => {\n    return (\n      neigh.hoveredObject && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: neigh.pointerX,\n            top: neigh.pointerY,\n            backgroundColor: \"#000000\",\n            color: \"#FFFFFF\",\n            borderRadius: \"5px\",\n          }}\n        >\n          {\"Population: \" + neigh.hoveredObject.attributes.Population} <br />\n          {\"NeighbourHood: \" +\n            neigh.hoveredObject.attributes.Neighbourhood}{\" \"}\n          <br />\n          {\"Assaults 2019: \" + neigh.hoveredObject.attributes.Assault_2019}{\" \"}\n          <br />\n          {\"BreakandEnter 2019: \" +\n            neigh.hoveredObject.attributes.BreakandEnter_2019}{\" \"}\n          <br />\n          {\"Auto Thefts 2019: \" +\n            neigh.hoveredObject.attributes.AutoTheft_2019}{\" \"}\n          <br />\n          {\"Homicides 2019: \" +\n            neigh.hoveredObject.attributes.Homicide_2019}{\" \"}\n          <br />\n          {\"Robberies 2019: \" +\n            neigh.hoveredObject.attributes.Robbery_2019}{\" \"}\n          <br />\n          {\"TheftOver 2019: \" +\n            neigh.hoveredObject.attributes.TheftOver_2019}{\" \"}\n          <br />\n        </div>\n      )\n    );\n  };\n\n  // api.walkscore.com/score?format=json&address=${address}&lat=${lat}&lon=${lon}&wsapikey=${API_KEY}`\n  // componentDidMount() {\n  //   axios.get(`http://localhost:8080/walk/score?format=json&address=${address}&lat=${lat}&lon=${lon}&wsapikey=${process.env.REACT_APP_WALK_API_KEY}`).then(res=>console.log(res)).catch(err=>console.log(err));\n\n  // axios\n  //   .get(\n  //     \"https://services.arcgis.com/S9th0jAJ7bqgIRjw/arcgis/rest/services/MCI_2014_to_2019/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\n  //   )\n  //   .then(res => console.log(res.data))\n  //   .catch(err => console.log(err));\n  // console.log(placesData.default.features);\n  // console.log(schoolData);\n  // console.log(test);\n  // }\n  const getData = () => {\n    axios\n      .get(\n        \"https://services.arcgis.com/S9th0jAJ7bqgIRjw/arcgis/rest/services/Neighbourhood_MCI/FeatureServer/0/query?where=1%3D1&outFields=Neighbourhood,Population,Assault_2019,AutoTheft_2019,BreakandEnter_2019,Homicide_2019,Robbery_2019,TheftOver_2019&outSR=4326&f=json\"\n      )\n      .then((response) => {\n        setPolyData(response.data.features);\n      })\n      .catch((err) => console.log(err));\n  };\n  if (!polyData) {\n    getData();\n  }\n  let polyLayer = new PolygonLayer({\n    id: \"polygon-layer\",\n    data: polyData,\n    pickable: true,\n    stroked: true,\n    filled: true,\n    wireframe: true,\n    visible: true,\n    lineWidthMinPixels: 1,\n    getPolygon: (d) => d.geometry.rings,\n    getFillColor: (d) => [d.attributes.Population / 60, 140, 0],\n    getLineColor: [80, 80, 80],\n    getLineWidth: 1,\n    onHover: (info) => {\n      setNeigh({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y,\n      });\n    },\n  });\n\n  const queryParams = {\n    country: \"ca\",\n  };\n  const layers = [searchResultLayer];\n  if (checkedSchool) {\n    layers.push(schoolLayer);\n  }\n  if (checkedAssault) {\n    layers.push(crimeLayerOne);\n  }\n  if (checkedAuto) {\n    layers.push(crimeLayerTwo);\n  }\n  if (checkedBE) {\n    layers.push(crimeLayerThree);\n  }\n  if (checkedRobbery) {\n    layers.push(crimeLayerFour);\n  }\n  if (checkedTheft) {\n    layers.push(crimeLayerFive);\n  }\n  if (checkedPlaces) {\n    layers.push(placesLayer);\n  }\n  if (checkNeigh && polyData) {\n    layers.push(polyLayer);\n  }\n\n  // console.log(polyData);\n  return (\n    <>\n      <div className=\"maps__text\">\n        The Following Map lets you search for any area and shows previous\n        crimes, places of interest and schools in the area. To see crimes,\n        please search a neighbourhood within Toronto\n      </div>\n      <section className=\"maps__data\">\n        <Geocoder\n          onSelected={onSelected}\n          viewport={viewport}\n          hideOnSelect={true}\n          queryParams={queryParams}\n          className=\"maps__search\"\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          updateInputOnSelect={true}\n          pointZoom={14}\n          transitionDuration={200}\n        />\n        <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          onViewportChange={setViewport}\n          mapStyle=\"mapbox://styles/darkthunder119/ck7uiltqn5ugg1iqhscr6epoe\"\n          className=\"maps__map\"\n          dragPan={true}\n          touchAction=\"pan-y\"\n        >\n          {searchResultLayer && (\n            <DeckGL {...viewport} layers={layers} getCursor={() => \"crosshair\"}>\n              {renderTooltip}\n              {renderTooltipCrime}\n              {renderTooltipSchool}\n              {renderTooltipNeigh}\n            </DeckGL>\n          )}\n          <div style={fullscreenControlStyle}>\n            <FullscreenControl />\n          </div>\n          <div style={navStyle}>\n            <NavigationControl />\n          </div>\n          <div style={scaleControlStyle}>\n            <ScaleControl />\n          </div>\n          {searchResultLayer && (\n            <div className=\"maps__mainlegend\">\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedSchool(!checkedSchool)}\n                  checked={checkedSchool}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> School Data</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedAssault(!checkedAssault)}\n                  checked={checkedAssault}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Assaults 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedAuto(!checkedAuto)}\n                  checked={checkedAuto}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Auto Theft 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedRobbery(!checkedRobbery)}\n                  checked={checkedRobbery}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Robberies 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedBE(!checkedBE)}\n                  checked={checkedBE}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}>Break and Enters 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedTheft(!checkedTheft)}\n                  checked={checkedTheft}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Thefts 2014-2019</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckedPlaces(!checkedPlaces)}\n                  checked={checkedPlaces}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Places of Interest</p>\n              </div>\n              <div className=\"maps__legend\">\n                <Switch\n                  onChange={() => setCheckNeigh(!checkNeigh)}\n                  checked={checkNeigh}\n                  handleDiameter={13}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  height={15}\n                  width={30}\n                />\n                <p style={{ paddingLeft: \"5px\" }}> Neighbourhood Boundaries</p>\n              </div>\n            </div>\n          )}\n        </ReactMapGL>\n      </section>\n    </>\n  );\n}\n\nexport default MapOne;\n"],"sourceRoot":""}